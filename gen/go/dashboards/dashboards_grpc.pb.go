// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: dashboards/dashboards.proto

package insights_dashboards

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BasicDiffsClient is the client API for BasicDiffs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BasicDiffsClient interface {
	GetFundingRate(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*FundingResponse, error)
}

type basicDiffsClient struct {
	cc grpc.ClientConnInterface
}

func NewBasicDiffsClient(cc grpc.ClientConnInterface) BasicDiffsClient {
	return &basicDiffsClient{cc}
}

func (c *basicDiffsClient) GetFundingRate(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*FundingResponse, error) {
	out := new(FundingResponse)
	err := c.cc.Invoke(ctx, "/main.BasicDiffs/GetFundingRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BasicDiffsServer is the server API for BasicDiffs service.
// All implementations must embed UnimplementedBasicDiffsServer
// for forward compatibility
type BasicDiffsServer interface {
	GetFundingRate(context.Context, *BasicRequest) (*FundingResponse, error)
	mustEmbedUnimplementedBasicDiffsServer()
}

// UnimplementedBasicDiffsServer must be embedded to have forward compatible implementations.
type UnimplementedBasicDiffsServer struct {
}

func (UnimplementedBasicDiffsServer) GetFundingRate(context.Context, *BasicRequest) (*FundingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFundingRate not implemented")
}
func (UnimplementedBasicDiffsServer) mustEmbedUnimplementedBasicDiffsServer() {}

// UnsafeBasicDiffsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BasicDiffsServer will
// result in compilation errors.
type UnsafeBasicDiffsServer interface {
	mustEmbedUnimplementedBasicDiffsServer()
}

func RegisterBasicDiffsServer(s grpc.ServiceRegistrar, srv BasicDiffsServer) {
	s.RegisterService(&BasicDiffs_ServiceDesc, srv)
}

func _BasicDiffs_GetFundingRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasicDiffsServer).GetFundingRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.BasicDiffs/GetFundingRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasicDiffsServer).GetFundingRate(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BasicDiffs_ServiceDesc is the grpc.ServiceDesc for BasicDiffs service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BasicDiffs_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "main.BasicDiffs",
	HandlerType: (*BasicDiffsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFundingRate",
			Handler:    _BasicDiffs_GetFundingRate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dashboards/dashboards.proto",
}
